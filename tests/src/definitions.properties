# Copyright (c) 2007-2015 AREasy Runtime
#
# This library, AREasy Runtime and API for BMC Remedy AR System, is free software ("Licensed Software");
# you can redistribute it and/or modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either version 2.1 of the License,
# or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# including but not limited to, the implied warranty of MERCHANTABILITY, NONINFRINGEMENT,
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
#################################################################
definitions.01.name = Classic Definitions Export
definitions.01.details = Export all selected definitions (named in the Excel file) to a single file
definitions.01.action = aar.devpackage
definitions.01.arguments = -export -parserfile "${tests.data}/ExportSample1.xls" -outputfile "${tests.out}/definitions.def"
#----------------------------------------------------------------
definitions.02.name = Object Type Definitions Export
definitions.02.details = Export all selected definitions (named in the Excel file) to a specific folder, creating a definition file for each object type
definitions.02.action= aar.devpackage
definitions.02.arguments = -export -parserfile "${tests.data}/ExportSample1.xls" -outputfolder "${tests.out}"
#----------------------------------------------------------------
definitions.03.name = Discrete Definitions Export
definitions.03.details = Export all selected definitions (named in the Excel file) to a specific folder, creating a specific definition file for each developed object
definitions.03.action= aar.devpackage
definitions.03.arguments = -export -parserfile "${tests.data}/ExportSample1.xls" -outputfolder "${tests.out}/" -divided
#----------------------------------------------------------------
definitions.04.name = Export Inventory
definitions.04.details = Create an inventory file for the specified objects for export and filtered by exclusive inventory directives
definitions.04.action= aar.devpackage
definitions.04.arguments = -export -prefix SNT -inventory -outputfile "${tests.out}/inventory.txt" -only-forms -only-filters
#----------------------------------------------------------------
definitions.05.name = Definitions Export in XML Format
definitions.05.details = Export all selected definitions (named in the Excel file) to an XML file
definitions.05.action = aar.devpackage
definitions.05.arguments = -export -parserfile "${tests.data}/ExportSample1.xls" -outputfile "${tests.out}/definitions.xml"
#----------------------------------------------------------------
definitions.06.name = Binary Definitions Export
definitions.06.details = Export all selected definitions (named in the Excel file) in binary format into a single file
definitions.06.action = aar.devpackage
definitions.06.arguments = -export -parserfile "${tests.data}/ExportSample2.xls" -outputfile "${tests.out}/definitions.bin"
#----------------------------------------------------------------
definitions.07.name = Disable Objects using Excel
definitions.07.details =  Disable all objects specified in the input excel file
definitions.07.action = aar.devpackage
definitions.07.arguments = -import -parserfile "${tests.data}/StatusSample1.xls"
#----------------------------------------------------------------
definitions.08.name = Enable Objects using Excel
definitions.08.details = Enable all objects specified in the input excel file
definitions.08.action = aar.devpackage
definitions.08.arguments = -import -parserfile "${tests.data}/StatusSample2.xls"
#----------------------------------------------------------------
definitions.09.name = Classic Disable Objects
definitions.09.details =  Disable all objects specified to the input command line
definitions.09.action = dev.status
definitions.09.arguments = -disable -activelinks "SNT:Test:PushButton" -filters "SNT:Test:SaveRecordNotification"
#----------------------------------------------------------------
definitions.10.name = Classic Enable Objects
definitions.10.details = Enable all objects specified to the input command line
definitions.10.action = dev.status
definitions.10.arguments = -enable -activelinks "SNT:Test:PushButton" -filters "SNT:Test:SaveRecordNotification"
#----------------------------------------------------------------
definitions.11.name = Classic Objects Removal
definitions.11.details = Remove all objects specified in the excel file
definitions.11.action = aar.devpackage
definitions.11.arguments = -import -parserfile "${tests.data}/RemoveSample1.xls"
#----------------------------------------------------------------
definitions.12.name = Classic Definitions Import
definitions.12.details = Import all selected objects (named in the Excel file) in the ARSystem server
definitions.12.action = aar.devpackage
definitions.12.arguments = -import -parserfile "${tests.data}/ExportSample1.xls" -inputfile "${tests.data}/ImportSample1.def" -overwrite
#----------------------------------------------------------------
definitions.13.name = Advanced Objects Removal
definitions.13.details = Remove all objects specified in the excel file (an object could be also a view or a field)
definitions.13.action = aar.devpackage
definitions.13.arguments = -import -parserfile "${tests.data}/RemoveSample2.xls"
#----------------------------------------------------------------
definitions.14.name = Binary Definitions Import
definitions.14.details = Import all selected objects (named in the Excel file) in the ARSystem server from binary format (an object could be also a view or a field)
definitions.14.action = aar.devpackage
definitions.14.arguments = -import -parserfile "${tests.data}/ExportSample2.xls" -inputfile "${tests.data}/ImportSample2.bin" -overwrite
#----------------------------------------------------------------
#################################################################
